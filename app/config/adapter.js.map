{
    "version": 3,
    "sources": [
        "../../src/config/adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "nunjucks",
        "fileSession",
        "Console",
        "File",
        "DateFile",
        "path",
        "isDev",
        "think",
        "env",
        "database",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "mysql",
        "session",
        "cookie",
        "name",
        "sessionPath",
        "view",
        "viewPath",
        "sep",
        "extname",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern"
    ],
    "mappings": "AAAA,MAAMA,YAAYC,QAAQ,kBAAR,CAAlB;AACA,MAAMC,WAAWD,QAAQ,qBAAR,CAAjB;AACA,MAAME,cAAcF,QAAQ,oBAAR,CAApB;AACA,MAAM,EAACG,OAAD,EAAUC,IAAV,EAAgBC,QAAhB,KAA4BL,QAAQ,eAAR,CAAlC;AACA,MAAMM,OAAON,QAAQ,MAAR,CAAb;AACA,MAAMO,QAAQC,MAAMC,GAAN,KAAc,aAA5B;AACA,MAAMC,WAAWV,QAAQ,eAAR,CAAjB;;AAEA;;;;AAIAW,QAAQC,KAAR,GAAgB;AACdC,QAAM,MADQ;AAEdC,UAAQ;AACNC,aAAS,KAAK,EAAL,GAAU,EAAV,GAAe,IADlB,CACuB;AADvB,GAFM;AAKdC,QAAM;AACJC,YAAQlB,SADJ;AAEJmB,eAAWZ,KAAKa,IAAL,CAAUX,MAAMY,SAAhB,EAA2B,eAA3B,CAFP,EAEoD;AACxDC,eAAW,CAHP;AAIJC,gBAAY,KAAK,EAAL,GAAU,EAAV,GAAe,IAJvB,CAI4B;AAJ5B;AALQ,CAAhB;;AAaA;;;;AAIAX,QAAQY,KAAR,GAAgB;AACdV,QAAM,OADQ;AAEdC,UAAQ;AACNU,gBAAYjB,KADN;AAENkB,YAAQlB,KAFF;AAGNmB,YAAQC,OAAOnB,MAAMkB,MAAN,CAAaE,IAAb,CAAkBD,GAAlB;AAHT,GAFM;AAOdE,SAAOnB;AAPO,CAAhB;;AAUA;;;;AAIAC,QAAQmB,OAAR,GAAkB;AAChBjB,QAAM,MADU;AAEhBC,UAAQ;AACNiB,YAAQ;AACNC,YAAM;AACN;AACA;AAHM;AADF,GAFQ;AAShBhB,QAAM;AACJC,YAAQf,WADJ;AAEJ+B,iBAAa3B,KAAKa,IAAL,CAAUX,MAAMY,SAAhB,EAA2B,iBAA3B;AAFT;AATU,CAAlB;;AAeA;;;;AAIAT,QAAQuB,IAAR,GAAe;AACbrB,QAAM,UADO;AAEbC,UAAQ;AACNqB,cAAU7B,KAAKa,IAAL,CAAUX,MAAMY,SAAhB,EAA2B,MAA3B,CADJ;AAENgB,SAAK,GAFC;AAGNC,aAAS;AAHH,GAFK;AAObpC,YAAU;AACRgB,YAAQhB;AADA;AAPG,CAAf;;AAYA;;;;AAIAU,QAAQe,MAAR,GAAiB;AACfb,QAAMN,QAAQ,SAAR,GAAoB,UADX;AAEf+B,WAAS;AACPrB,YAAQd;AADD,GAFM;AAKfa,QAAM;AACJC,YAAQb,IADJ;AAEJmC,aAAS,EAFL,EAES;AACbC,cAAU,IAHN;AAIJC,gBAAY,KAAK,IAJb,EAImB;AACvBC,cAAUpC,KAAKa,IAAL,CAAUX,MAAMY,SAAhB,EAA2B,cAA3B;AALN,GALS;AAYfuB,YAAU;AACR1B,YAAQZ,QADA;AAERuC,WAAO,KAFC;AAGRJ,cAAU,IAHF;AAIRK,aAAS,aAJD;AAKRC,0BAAsB,IALd;AAMRJ,cAAUpC,KAAKa,IAAL,CAAUX,MAAMY,SAAhB,EAA2B,cAA3B;AANF;AAZK,CAAjB",
    "file": "../../src/config/adapter.js",
    "sourcesContent": [
        "const fileCache = require('think-cache-file');\nconst nunjucks = require('think-view-nunjucks');\nconst fileSession = require('think-session-file');\nconst {Console, File, DateFile} = require('think-logger3');\nconst path = require('path');\nconst isDev = think.env === 'development';\nconst database = require('./database.js')\n\n/**\n * cache adapter config\n * @type {Object}\n */\nexports.cache = {\n  type: 'file',\n  common: {\n    timeout: 24 * 60 * 60 * 1000 // millisecond\n  },\n  file: {\n    handle: fileCache,\n    cachePath: path.join(think.ROOT_PATH, 'runtime/cache'), // absoulte path is necessarily required\n    pathDepth: 1,\n    gcInterval: 24 * 60 * 60 * 1000 // gc interval\n  }\n};\n\n/**\n * model adapter config\n * @type {Object}\n */\nexports.model = {\n  type: 'mysql',\n  common: {\n    logConnect: isDev,\n    logSql: isDev,\n    logger: msg => think.logger.info(msg)\n  },\n  mysql: database\n};\n\n/**\n * session adapter config\n * @type {Object}\n */\nexports.session = {\n  type: 'file',\n  common: {\n    cookie: {\n      name: 'thinkjs'\n      // keys: ['werwer', 'werwer'],\n      // signed: true\n    }\n  },\n  file: {\n    handle: fileSession,\n    sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\n  }\n};\n\n/**\n * view adapter config\n * @type {Object}\n */\nexports.view = {\n  type: 'nunjucks',\n  common: {\n    viewPath: path.join(think.ROOT_PATH, 'view'),\n    sep: '_',\n    extname: '.html'\n  },\n  nunjucks: {\n    handle: nunjucks\n  }\n};\n\n/**\n * logger adapter config\n * @type {Object}\n */\nexports.logger = {\n  type: isDev ? 'console' : 'dateFile',\n  console: {\n    handle: Console\n  },\n  file: {\n    handle: File,\n    backups: 10, // max chunk number\n    absolute: true,\n    maxLogSize: 50 * 1024, // 50M\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  },\n  dateFile: {\n    handle: DateFile,\n    level: 'ALL',\n    absolute: true,\n    pattern: '-yyyy-MM-dd',\n    alwaysIncludePattern: true,\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  }\n};\n"
    ]
}